#
# Copyright (c) 2021 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
version: 1.0

model:
  name: bert_distillation
  framework: pytorch_fx

distillation:
  train:
    optimizer:
      SGD:
        learning_rate: 0.001
    criterion:
      IntermediateLayersKnowledgeDistillationLoss:
        layer_mappings: [
          ['bert.encoder.layer.0.output', 'bert.encoder.layer.0.output'],
          ['bert.encoder.layer.0.attention', '1', 'bert.encoder.layer.0.attention', '1'],
          ['bert.encoder.layer.1.output', 'bert.encoder.layer.1.output'],
          ['bert.encoder.layer.1.attention', '1', 'bert.encoder.layer.1.attention', '1'],
          ['bert.encoder.layer.2.output', 'bert.encoder.layer.2.output'],
          ['bert.encoder.layer.2.attention', '1', 'bert.encoder.layer.2.attention', '1'],
          ['bert.encoder.layer.3.output', 'bert.encoder.layer.3.output'],
          ['bert.encoder.layer.3.attention', '1', 'bert.encoder.layer.3.attention', '1'],
          ['bert.encoder.layer.4.output', 'bert.encoder.layer.4.output'],
          ['bert.encoder.layer.4.attention', '1', 'bert.encoder.layer.4.attention', '1'],
          ['bert.encoder.layer.5.output', 'bert.encoder.layer.5.output'],
          ['bert.encoder.layer.5.attention', '1', 'bert.encoder.layer.5.attention', '1'],
          ['bert.encoder.layer.6.output', 'bert.encoder.layer.6.output'],
          ['bert.encoder.layer.6.attention', '1', 'bert.encoder.layer.6.attention', '1'],
          ['bert.encoder.layer.7.output', 'bert.encoder.layer.7.output'],
          ['bert.encoder.layer.7.attention', '1', 'bert.encoder.layer.7.attention', '1'],
          ['bert.encoder.layer.8.output', 'bert.encoder.layer.8.output'],
          ['bert.encoder.layer.8.attention', '1', 'bert.encoder.layer.8.attention', '1'],
          ['bert.encoder.layer.9.output', 'bert.encoder.layer.9.output'],
          ['bert.encoder.layer.9.attention', '1', 'bert.encoder.layer.9.attention', '1'],
          ['bert.encoder.layer.10.output', 'bert.encoder.layer.10.output'],
          ['bert.encoder.layer.10.attention', '1', 'bert.encoder.layer.10.attention', '1'],
          ['bert.encoder.layer.11.output', 'bert.encoder.layer.11.output'],
          ['bert.encoder.layer.11.attention', '1', 'bert.encoder.layer.11.attention', '1'],
          ['classifier', 'classifier'],
        ]
        loss_weights: [1, 1, 1, 1, 1,
                       1, 1, 1, 1, 1,
                       1, 1, 1, 1, 1,
                       1, 1, 1, 1, 1,
                       1, 1, 1, 1, 1]

tuning:
  accuracy_criterion:
    relative: 0.01                             # the tuning target of accuracy loss percentage: 1%
  exit_policy:
    timeout: 0                                   # tuning timeout (seconds)
  random_seed: 9527                            # random seed
